{"version":3,"sources":["../node_modules/graphql-tag/src/index.js","../node_modules/graphql/jsutils/devAssert.mjs","../node_modules/graphql/jsutils/defineToJSON.mjs","../node_modules/graphql/jsutils/isObjectLike.mjs","../node_modules/graphql/language/location.mjs","../node_modules/graphql/language/printLocation.mjs","../node_modules/graphql/error/GraphQLError.mjs","../node_modules/graphql/error/syntaxError.mjs","../node_modules/graphql/language/kinds.mjs","../node_modules/graphql/language/source.mjs","../node_modules/graphql/jsutils/defineToStringTag.mjs","../node_modules/graphql/language/tokenKind.mjs","../node_modules/graphql/language/lexer.mjs","../node_modules/graphql/language/directiveLocation.mjs","../node_modules/graphql/language/parser.mjs","../node_modules/@apollo/react-hooks/lib/react-hooks.esm.js"],"names":["parse","normalize","string","replace","trim","docCache","fragmentSourceMap","printFragmentWarnings","experimentalFragmentVariables","parseDocument","doc","cacheKey","parsed","kind","Error","stripLoc","removeLocAtThisLevel","docType","Object","prototype","toString","call","map","d","loc","startToken","endToken","key","value","valueType","keys","hasOwnProperty","ast","astFragmentMap","definitions","i","length","fragmentDefinition","fragmentName","name","sourceKey","source","body","substring","start","end","console","warn","push","processFragments","gql","args","Array","slice","arguments","literals","result","default","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","module","exports","devAssert","condition","message","Boolean","defineToJSON","classObject","fn","undefined","toJSON","inspect","nodejsCustomInspectSymbol","_typeof","obj","Symbol","iterator","constructor","getLocation","position","match","lineRegexp","line","column","exec","index","printLocation","location","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","concat","lines","split","locationLine","sublineIndex","Math","floor","sublineColumnNum","sublines","printPrefixedLines","subline","existingLines","filter","_ref","padLen","max","apply","_ref2","_ref3","str","prefix","join","len","GraphQLError","nodes","positions","path","originalError","extensions","_nodes","isArray","_source","node","_locations","_positions","reduce","list","pos","_extensions","originalExtensions","defineProperties","this","enumerable","writable","locations","stack","defineProperty","configurable","captureStackTrace","syntaxError","description","create","error","output","_i2","_error$nodes2","_i4","_error$locations2","printError","Kind","freeze","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","toStringTag","get","TokenKind","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","BLOCK_STRING","COMMENT","advanceLexer","lastToken","token","lookahead","next","readToken","Tok","prev","printCharCode","code","isNaN","JSON","stringify","String","fromCharCode","toUpperCase","lexer","bodyLength","startPosition","charCodeAt","lineStart","positionAfterWhitespace","col","readComment","readName","firstCode","isFloat","readDigits","readNumber","chunkStart","rawValue","readBlockString","charCode","a","b","c","char2hex","invalidSequence","readString","unexpectedCharacterMessage","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","options","parseValue","parser","expectToken","parseValueLiteral","parseType","type","parseTypeReference","Parser","sourceObj","_lexer","startOfFileToken","advance","createLexer","_options","_proto","parseName","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","operation","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","defaultValue","expectOptionalToken","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","expectKeyword","parseList","parseObject","parseStringLiteral","block","_this","values","any","_this2","fields","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","types","allowLegacySDLImplementsInterfaces","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","noLocation","Loc","getTokenDesc","atToken","openKind","parseFn","closeKind","OperationData","context","isMounted","previousOptions","getOptions","setOptions","newOptions","storePrevious","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","document","QueryData","_super","_a","forceUpdate","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getExecuteResult","getQueryResult","startQuerySubscription","obsRefetch","variables","query","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","skip","removeQuerySubscription","updateObservableQuery","getExecuteSsrResult","executeLazy","loading","networkStatus","ready","called","data","fetchData","ssr","obs","getCurrentResult","afterExecute","_b","lazy","handleErrorOrCompleted","setTimeout","resetQueryStoreErrors","bind","treeRenderingInitiated","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","addQueryPromise","prepareObservableQueryOptions","Query","displayName","fetchPolicy","metadata","reactComponent","initializeObservableQuery","getSSRObservable","observableQueryOptions","children","watchQuery","registerSSRObservable","newObservableQueryOptions","catch","subscription","obsQuery","subscribe","previousResult","_error","resubscribeToQuery","lastError","getLastError","lastResult","getLastResult","resetLastResults","assign","observableQueryFields","currentResult","partial","errors","graphQLErrors","partialRefetch","onCompleted","onError","unsubscribe","useBaseQuery","x","tick","updatedOptions","queryDataRef","current","queryData","memoFn","ref","useDeepMemo","queryResult","useQuery","useLazyQuery","MutationData","setResult","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","then","response","onMutationCompleted","onMutationError","mutation","Mutation","mostRecentMutationId","optimisticResponse","update","mutationContext","_c","awaitRefetchQueries","mutateOptions","mutateVariables","refetchQueries","ignoreResults","updateResult","isMostRecentMutation","SubscriptionData","initialize","getLoadingResult","shouldResubscribe","startSubscription","endSubscription","updateCurrentData","updateError","complete","completeSubscription","onSubscriptionData","subscriptionData","onSubscriptionComplete","RenderPromises","queryPromises","Map","queryInfoTrie","observable","props","lookupQueryInfo","queryInstance","finish","seen","set","Promise","resolve","hasPromises","size","consumeAndAwaitPromises","promises","forEach","promise","clear","all","varMap","has","variablesString","info"],"mappings":"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","file":"static/js/0.109b37a5.chunk.js","sourcesContent":["var parser = require('graphql/language/parser');\n\nvar parse = parser.parse; // Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\n\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n} // A map docString -> graphql document\n\n\nvar docCache = {}; // A map fragmentName -> [normalized source]\n\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n} // For testing.\n\n\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n} // Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\n\n\nvar printFragmentWarnings = true;\n\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc); // We know something about this fragment\n\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\" + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\" + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  } // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n\n\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  } // https://github.com/apollographql/graphql-tag/issues/40\n\n\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\n\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, {\n    experimentalFragmentVariables: experimentalFragmentVariables\n  });\n\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  } // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n\n\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n} // XXX This should eventually disallow arbitrary string interpolation, like Relay does\n\n\nfunction gql()\n/* arguments */\n{\n  var args = Array.prototype.slice.call(arguments);\n  var literals = args[0]; // We always get literals[0] and then matching post literals for each arg given\n\n  var result = typeof literals === \"string\" ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n} // Support typescript, which isn't as nice as Babel about default exports\n\n\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\nmodule.exports = gql;","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}","import nodejsCustomInspectSymbol from './nodejsCustomInspectSymbol';\n/**\n * The `defineToJSON()` function defines toJSON() and inspect() prototype\n * methods, if no function provided they become aliases for toString().\n */\n\nexport default function defineToJSON(classObject) {\n  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : classObject.prototype.toString;\n  classObject.prototype.toJSON = fn;\n  classObject.prototype.inspect = fn;\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\n\n\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}","import { getLocation } from '../language/location';\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var sublineIndex = Math.floor(columnNum / 80);\n    var sublineColumnNum = columnNum % 80;\n    var sublines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      sublines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), sublines[0]]].concat(sublines.slice(1, sublineIndex + 1).map(function (subline) {\n      return ['', subline];\n    }), [[' ', whitespace(sublineColumnNum - 1) + '^'], ['', sublines[sublineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return lpad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}","import isObjectLike from '../jsutils/isObjectLike';\nimport { getLocation } from '../language/location';\nimport { printLocation, printSourceLocation } from '../language/printLocation';\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport function GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n  var _source = source;\n\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n\n      return list;\n    }, []);\n  }\n\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations;\n\n  if (positions && source) {\n    _locations = positions.map(function (pos) {\n      return getLocation(source, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(getLocation(node.loc.source, node.loc.start));\n      }\n\n      return list;\n    }, []);\n  }\n\n  var _extensions = extensions;\n\n  if (_extensions == null && originalError != null) {\n    var originalExtensions = originalError.extensions;\n\n    if (isObjectLike(originalExtensions)) {\n      _extensions = originalExtensions;\n    }\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_locations)\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(path)\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _extensions || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_extensions)\n    }\n  }); // Include (non-enumerable) stack trace.\n\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: GraphQLError\n  },\n  name: {\n    value: 'GraphQLError'\n  },\n  toString: {\n    value: function toString() {\n      return printError(this);\n    }\n  }\n});\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}","import { GraphQLError } from './GraphQLError';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}","/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */","import devAssert from '../jsutils/devAssert';\nimport defineToStringTag from '../jsutils/defineToStringTag';\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\n\nexport var Source = function Source(body, name, locationOffset) {\n  this.body = body;\n  this.name = name || 'GraphQL request';\n  this.locationOffset = locationOffset || {\n    line: 1,\n    column: 1\n  };\n  this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive');\n  this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive');\n}; // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(Source);","/**\n * The `defineToStringTag()` function checks first to see if the runtime\n * supports the `Symbol` class and then if the `Symbol.toStringTag` constant\n * is defined as a `Symbol` instance. If both conditions are met, the\n * Symbol.toStringTag property is defined as a getter that returns the\n * supplied class constructor's name.\n *\n * @method defineToStringTag\n *\n * @param {Class<any>} classObject a class such as Object, String, Number but\n * typically one of your own creation through the class keyword; `class A {}`,\n * for example.\n */\nexport default function defineToStringTag(classObject) {\n  if (typeof Symbol === 'function' && Symbol.toStringTag) {\n    Object.defineProperty(classObject.prototype, Symbol.toStringTag, {\n      get: function get() {\n        return this.constructor.name;\n      }\n    });\n  }\n}","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */","import defineToJSON from '../jsutils/defineToJSON';\nimport { syntaxError } from '../error/syntaxError';\nimport { dedentBlockStringValue } from './blockString';\nimport { TokenKind } from './tokenKind';\n/**\n * Given a Source object, this returns a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport function createLexer(source, options) {\n  var startOfFileToken = new Tok(TokenKind.SOF, 0, 0, 0, 0, null);\n  var lexer = {\n    source: source,\n    options: options,\n    lastToken: startOfFileToken,\n    token: startOfFileToken,\n    line: 1,\n    lineStart: 0,\n    advance: advanceLexer,\n    lookahead: lookahead\n  };\n  return lexer;\n}\n\nfunction advanceLexer() {\n  this.lastToken = this.token;\n  var token = this.token = this.lookahead();\n  return token;\n}\n\nfunction lookahead() {\n  var token = this.token;\n\n  if (token.kind !== TokenKind.EOF) {\n    do {\n      // Note: next is only mutable during parsing, so we cast to allow this.\n      token = token.next || (token.next = readToken(this, token));\n    } while (token.kind === TokenKind.COMMENT);\n  }\n\n  return token;\n}\n/**\n * The return type of createLexer.\n */\n// @internal\n\n\nexport function isPunctuatorToken(token) {\n  var kind = token.kind;\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n/**\n * Helper function for constructing the Token object.\n */\n\nfunction Tok(kind, start, end, line, column, prev, value) {\n  this.kind = kind;\n  this.start = start;\n  this.end = end;\n  this.line = line;\n  this.column = column;\n  this.value = value;\n  this.prev = prev;\n  this.next = null;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\ndefineToJSON(Tok, function () {\n  return {\n    kind: this.kind,\n    value: this.value,\n    line: this.line,\n    column: this.column\n  };\n});\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Tok(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new Tok(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new Tok(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new Tok(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new Tok(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new Tok(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new Tok(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new Tok(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new Tok(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new Tok(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new Tok(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new Tok(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new Tok(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new Tok(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new Tok(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Tok(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or e\n\n\n  if (code === 46 || code === 69 || code === 101) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Tok(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Tok(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Tok(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Tok(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n}","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */","import inspect from '../jsutils/inspect';\nimport devAssert from '../jsutils/devAssert';\nimport defineToJSON from '../jsutils/defineToJSON';\nimport { syntaxError } from '../error/syntaxError';\nimport { Kind } from './kinds';\nimport { Source } from './source';\nimport { createLexer } from './lexer';\nimport { DirectiveLocation } from './directiveLocation';\nimport { TokenKind } from './tokenKind';\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\n\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n\nvar Parser =\n/*#__PURE__*/\nfunction () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new Source(source) : source;\n    sourceObj instanceof Source || devAssert(0, \"Must provide Source. Received: \".concat(inspect(sourceObj)));\n    this._lexer = createLexer(sourceObj);\n    this._options = options || {};\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.experimentalFragmentVariables) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        if (token.value === 'true' || token.value === 'false') {\n          this._lexer.advance();\n\n          return {\n            kind: Kind.BOOLEAN,\n            value: token.value === 'true',\n            loc: this.loc(token)\n          };\n        } else if (token.value === 'null') {\n          this._lexer.advance();\n\n          return {\n            kind: Kind.NULL,\n            loc: this.loc(token)\n          };\n        }\n\n        this._lexer.advance();\n\n        return {\n          kind: Kind.ENUM,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || // Legacy support for the SDL?\n      this._options.allowLegacySDLImplementsInterfaces && this.peek(TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    // Legacy support for the SDL?\n    if (this._options.allowLegacySDLEmptyFields && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *   - extend interface Name Directives[Const]? FieldsDefinition\n   *   - extend interface Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    if (!this._options.noLocation) {\n      return new Loc(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(kind, \", found \").concat(getTokenDesc(token)));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token)));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken || this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token)));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n\nfunction Loc(startToken, endToken, source) {\n  this.start = startToken.start;\n  this.end = endToken.end;\n  this.startToken = startToken;\n  this.endToken = endToken;\n  this.source = source;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\ndefineToJSON(Loc, function () {\n  return {\n    start: this.start,\n    end: this.end\n  };\n});\n/**\n * A helper function to describe a token as a string for debugging\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return value ? \"\".concat(token.kind, \" \\\"\").concat(value, \"\\\"\") : token.kind;\n}","import { parser, operationName, DocumentType, getApolloContext } from '@apollo/react-common';\nexport { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __extends, __assign } from 'tslib';\nimport React, { useRef, useContext, useReducer, useEffect, useState } from 'react';\nimport { NetworkStatus, ApolloError } from 'apollo-client';\nimport { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\n\nvar OperationData = function () {\n  function OperationData(options, context) {\n    this.isMounted = false;\n    this.previousOptions = {};\n    this.context = {};\n    this.options = {};\n    this.options = options || {};\n    this.context = context || {};\n  }\n\n  OperationData.prototype.getOptions = function () {\n    return this.options;\n  };\n\n  OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n    if (storePrevious === void 0) {\n      storePrevious = false;\n    }\n\n    if (storePrevious && !equal(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n\n    this.options = newOptions;\n  };\n\n  OperationData.prototype.unmount = function () {\n    this.isMounted = false;\n  };\n\n  OperationData.prototype.refreshClient = function () {\n    var client = this.options && this.options.client || this.context && this.context.client;\n    process.env.NODE_ENV === \"production\" ? invariant(!!client, 2) : invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' + 'Wrap the root component in an <ApolloProvider>, or pass an ' + 'ApolloClient instance in via options.');\n    var isNew = false;\n\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n\n    return {\n      client: this.client,\n      isNew: isNew\n    };\n  };\n\n  OperationData.prototype.verifyDocumentType = function (document, type) {\n    var operation = parser(document);\n    var requiredOperationName = operationName(type);\n    var usedOperationName = operationName(operation.type);\n    process.env.NODE_ENV === \"production\" ? invariant(operation.type === type, 3) : invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" + (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\"));\n  };\n\n  return OperationData;\n}();\n\nvar QueryData = function (_super) {\n  __extends(QueryData, _super);\n\n  function QueryData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        forceUpdate = _a.forceUpdate;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.previousData = {};\n    _this.currentObservable = {};\n    _this.runLazy = false;\n\n    _this.runLazyQuery = function (options) {\n      _this.cleanup();\n\n      _this.runLazy = true;\n      _this.lazyOptions = options;\n\n      _this.forceUpdate();\n    };\n\n    _this.getExecuteResult = function () {\n      var result = _this.getQueryResult();\n\n      _this.startQuerySubscription();\n\n      return result;\n    };\n\n    _this.obsRefetch = function (variables) {\n      return _this.currentObservable.query.refetch(variables);\n    };\n\n    _this.obsFetchMore = function (fetchMoreOptions) {\n      return _this.currentObservable.query.fetchMore(fetchMoreOptions);\n    };\n\n    _this.obsUpdateQuery = function (mapFn) {\n      return _this.currentObservable.query.updateQuery(mapFn);\n    };\n\n    _this.obsStartPolling = function (pollInterval) {\n      _this.currentObservable && _this.currentObservable.query && _this.currentObservable.query.startPolling(pollInterval);\n    };\n\n    _this.obsStopPolling = function () {\n      _this.currentObservable && _this.currentObservable.query && _this.currentObservable.query.stopPolling();\n    };\n\n    _this.obsSubscribeToMore = function (options) {\n      return _this.currentObservable.query.subscribeToMore(options);\n    };\n\n    _this.forceUpdate = forceUpdate;\n    return _this;\n  }\n\n  QueryData.prototype.execute = function () {\n    this.refreshClient();\n\n    var _a = this.getOptions(),\n        skip = _a.skip,\n        query = _a.query;\n\n    if (skip || query !== this.previousData.query) {\n      this.removeQuerySubscription();\n      this.previousData.query = query;\n    }\n\n    this.updateObservableQuery();\n    if (this.isMounted) this.startQuerySubscription();\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  };\n\n  QueryData.prototype.executeLazy = function () {\n    return !this.runLazy ? [this.runLazyQuery, {\n      loading: false,\n      networkStatus: NetworkStatus.ready,\n      called: false,\n      data: undefined\n    }] : [this.runLazyQuery, this.execute()];\n  };\n\n  QueryData.prototype.fetchData = function () {\n    var options = this.getOptions();\n    if (options.skip || options.ssr === false) return false;\n    var obs = this.currentObservable.query;\n    var currentResult = obs.getCurrentResult();\n    return currentResult.loading ? obs.result() : false;\n  };\n\n  QueryData.prototype.afterExecute = function (_a) {\n    var _this = this;\n\n    var _b = (_a === void 0 ? {} : _a).lazy,\n        lazy = _b === void 0 ? false : _b;\n    this.isMounted = true;\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n      setTimeout(function () {\n        _this.currentObservable.query && _this.currentObservable.query.resetQueryStoreErrors();\n      });\n    }\n\n    this.previousOptions = this.getOptions();\n    return this.unmount.bind(this);\n  };\n\n  QueryData.prototype.cleanup = function () {\n    this.removeQuerySubscription();\n    delete this.currentObservable.query;\n    delete this.previousData.result;\n  };\n\n  QueryData.prototype.getOptions = function () {\n    var options = _super.prototype.getOptions.call(this);\n\n    if (this.lazyOptions) {\n      options.variables = __assign({}, options.variables, this.lazyOptions.variables);\n      options.context = __assign({}, options.context, this.lazyOptions.context);\n    }\n\n    if (this.runLazy) {\n      delete options.skip;\n    }\n\n    return options;\n  };\n\n  QueryData.prototype.getExecuteSsrResult = function () {\n    var treeRenderingInitiated = this.context && this.context.renderPromises;\n    var ssrDisabled = this.getOptions().ssr === false;\n    var fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n    var ssrLoading = {\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: undefined\n    };\n\n    if (ssrDisabled && (treeRenderingInitiated || fetchDisabled)) {\n      return ssrLoading;\n    }\n\n    var result;\n\n    if (treeRenderingInitiated) {\n      result = this.context.renderPromises.addQueryPromise(this, this.getExecuteResult) || ssrLoading;\n    }\n\n    return result;\n  };\n\n  QueryData.prototype.prepareObservableQueryOptions = function () {\n    var options = this.getOptions();\n    this.verifyDocumentType(options.query, DocumentType.Query);\n    var displayName = options.displayName || 'Query';\n\n    if (this.context && this.context.renderPromises && (options.fetchPolicy === 'network-only' || options.fetchPolicy === 'cache-and-network')) {\n      options.fetchPolicy = 'cache-first';\n    }\n\n    return __assign({}, options, {\n      displayName: displayName,\n      context: options.context,\n      metadata: {\n        reactComponent: {\n          displayName: displayName\n        }\n      }\n    });\n  };\n\n  QueryData.prototype.initializeObservableQuery = function () {\n    if (this.context && this.context.renderPromises) {\n      this.currentObservable.query = this.context.renderPromises.getSSRObservable(this.getOptions());\n    }\n\n    if (!this.currentObservable.query) {\n      var observableQueryOptions = this.prepareObservableQueryOptions();\n      this.previousData.observableQueryOptions = __assign({}, observableQueryOptions, {\n        children: null\n      });\n      this.currentObservable.query = this.refreshClient().client.watchQuery(__assign({}, observableQueryOptions));\n\n      if (this.context && this.context.renderPromises) {\n        this.context.renderPromises.registerSSRObservable(this.currentObservable.query, observableQueryOptions);\n      }\n    }\n  };\n\n  QueryData.prototype.updateObservableQuery = function () {\n    if (!this.currentObservable.query) {\n      this.initializeObservableQuery();\n      return;\n    }\n\n    var newObservableQueryOptions = __assign({}, this.prepareObservableQueryOptions(), {\n      children: null\n    });\n\n    if (!equal(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n      this.previousData.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable.query.setOptions(newObservableQueryOptions).catch(function () {});\n    }\n  };\n\n  QueryData.prototype.startQuerySubscription = function () {\n    var _this = this;\n\n    if (this.currentObservable.subscription || this.getOptions().skip) return;\n    var obsQuery = this.currentObservable.query;\n    this.currentObservable.subscription = obsQuery.subscribe({\n      next: function next(_a) {\n        var loading = _a.loading,\n            networkStatus = _a.networkStatus,\n            data = _a.data;\n        var previousResult = _this.previousData.result;\n\n        if (previousResult && previousResult.loading === loading && previousResult.networkStatus === networkStatus && equal(previousResult.data, data)) {\n          return;\n        }\n\n        _this.forceUpdate();\n      },\n      error: function error(_error) {\n        _this.resubscribeToQuery();\n\n        if (!_error.hasOwnProperty('graphQLErrors')) throw _error;\n        var previousResult = _this.previousData.result;\n\n        if (previousResult && previousResult.loading || !equal(_error, _this.previousData.error)) {\n          _this.previousData.error = _error;\n\n          _this.forceUpdate();\n        }\n      }\n    });\n  };\n\n  QueryData.prototype.resubscribeToQuery = function () {\n    this.removeQuerySubscription();\n    var lastError = this.currentObservable.query.getLastError();\n    var lastResult = this.currentObservable.query.getLastResult();\n    this.currentObservable.query.resetLastResults();\n    this.startQuerySubscription();\n    Object.assign(this.currentObservable.query, {\n      lastError: lastError,\n      lastResult: lastResult\n    });\n  };\n\n  QueryData.prototype.getQueryResult = function () {\n    var result = this.observableQueryFields();\n    var options = this.getOptions();\n\n    if (options.skip) {\n      result = __assign({}, result, {\n        data: undefined,\n        error: undefined,\n        loading: false,\n        called: true\n      });\n    } else {\n      var currentResult = this.currentObservable.query.getCurrentResult();\n      var loading = currentResult.loading,\n          partial = currentResult.partial,\n          networkStatus = currentResult.networkStatus,\n          errors = currentResult.errors;\n      var error = currentResult.error,\n          data = currentResult.data;\n\n      if (errors && errors.length > 0) {\n        error = new ApolloError({\n          graphQLErrors: errors\n        });\n      }\n\n      result = __assign({}, result, {\n        loading: loading,\n        networkStatus: networkStatus,\n        error: error,\n        called: true\n      });\n\n      if (loading) {\n        var previousData = this.previousData.result && this.previousData.result.data;\n        result.data = previousData && data ? __assign({}, previousData, data) : previousData || data;\n      } else if (error) {\n        Object.assign(result, {\n          data: (this.currentObservable.query.getLastResult() || {}).data\n        });\n      } else {\n        var fetchPolicy = this.currentObservable.query.options.fetchPolicy;\n        var partialRefetch = options.partialRefetch;\n\n        if (partialRefetch && !data && partial && fetchPolicy !== 'cache-only') {\n          Object.assign(result, {\n            loading: true,\n            networkStatus: NetworkStatus.loading\n          });\n          result.refetch();\n          return result;\n        }\n\n        result.data = data;\n      }\n    }\n\n    result.client = this.client;\n    this.previousData.loading = this.previousData.result && this.previousData.result.loading || false;\n    this.previousData.result = result;\n    return result;\n  };\n\n  QueryData.prototype.handleErrorOrCompleted = function () {\n    var obsQuery = this.currentObservable.query;\n    if (!obsQuery) return;\n\n    var _a = obsQuery.getCurrentResult(),\n        data = _a.data,\n        loading = _a.loading,\n        error = _a.error;\n\n    if (!loading) {\n      var _b = this.getOptions(),\n          query = _b.query,\n          variables = _b.variables,\n          onCompleted = _b.onCompleted,\n          onError = _b.onError;\n\n      if (this.previousOptions && !this.previousData.loading && equal(this.previousOptions.query, query) && equal(this.previousOptions.variables, variables)) {\n        return;\n      }\n\n      if (onCompleted && !error) {\n        onCompleted(data);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  };\n\n  QueryData.prototype.removeQuerySubscription = function () {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  };\n\n  QueryData.prototype.observableQueryFields = function () {\n    var observable = this.currentObservable.query;\n    return {\n      variables: observable.variables,\n      refetch: this.obsRefetch,\n      fetchMore: this.obsFetchMore,\n      updateQuery: this.obsUpdateQuery,\n      startPolling: this.obsStartPolling,\n      stopPolling: this.obsStopPolling,\n      subscribeToMore: this.obsSubscribeToMore\n    };\n  };\n\n  return QueryData;\n}(OperationData);\n\nfunction useDeepMemo(memoFn, key) {\n  var ref = useRef();\n\n  if (!ref.current || !equal(key, ref.current.key)) {\n    ref.current = {\n      key: key,\n      value: memoFn()\n    };\n  }\n\n  return ref.current.value;\n}\n\nfunction useBaseQuery(query, options, lazy) {\n  if (lazy === void 0) {\n    lazy = false;\n  }\n\n  var context = useContext(getApolloContext());\n\n  var _a = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      tick = _a[0],\n      forceUpdate = _a[1];\n\n  var updatedOptions = options ? __assign({}, options, {\n    query: query\n  }) : {\n    query: query\n  };\n  var queryDataRef = useRef();\n\n  if (!queryDataRef.current) {\n    queryDataRef.current = new QueryData({\n      options: updatedOptions,\n      context: context,\n      forceUpdate: forceUpdate\n    });\n  }\n\n  var queryData = queryDataRef.current;\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n  var memo = {\n    options: __assign({}, updatedOptions, {\n      onError: undefined,\n      onCompleted: undefined\n    }),\n    context: context,\n    tick: tick\n  };\n  var result = useDeepMemo(function () {\n    return lazy ? queryData.executeLazy() : queryData.execute();\n  }, memo);\n  var queryResult = lazy ? result[1] : result;\n  useEffect(function () {\n    return queryData.afterExecute({\n      lazy: lazy\n    });\n  }, lazy ? undefined : [queryResult.loading, queryResult.networkStatus, queryResult.error, queryResult.data]);\n  useEffect(function () {\n    return function () {\n      return queryData.cleanup();\n    };\n  }, []);\n  return result;\n}\n\nfunction useQuery(query, options) {\n  return useBaseQuery(query, options, false);\n}\n\nfunction useLazyQuery(query, options) {\n  return useBaseQuery(query, options, true);\n}\n\nvar MutationData = function (_super) {\n  __extends(MutationData, _super);\n\n  function MutationData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        result = _a.result,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.runMutation = function (mutationFunctionOptions) {\n      if (mutationFunctionOptions === void 0) {\n        mutationFunctionOptions = {};\n      }\n\n      _this.onMutationStart();\n\n      var mutationId = _this.generateNewMutationId();\n\n      return _this.mutate(mutationFunctionOptions).then(function (response) {\n        _this.onMutationCompleted(response, mutationId);\n\n        return response;\n      }).catch(function (error) {\n        _this.onMutationError(error, mutationId);\n\n        if (!_this.getOptions().onError) throw error;\n      });\n    };\n\n    _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n\n    _this.result = result;\n    _this.setResult = setResult;\n    _this.mostRecentMutationId = 0;\n    return _this;\n  }\n\n  MutationData.prototype.execute = function (result) {\n    this.isMounted = true;\n    this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n    result.client = this.refreshClient().client;\n    return [this.runMutation, result];\n  };\n\n  MutationData.prototype.afterExecute = function () {\n    this.isMounted = true;\n    return this.unmount.bind(this);\n  };\n\n  MutationData.prototype.cleanup = function () {};\n\n  MutationData.prototype.mutate = function (mutationFunctionOptions) {\n    var _a = this.getOptions(),\n        mutation = _a.mutation,\n        variables = _a.variables,\n        optimisticResponse = _a.optimisticResponse,\n        update = _a.update,\n        _b = _a.context,\n        mutationContext = _b === void 0 ? {} : _b,\n        _c = _a.awaitRefetchQueries,\n        awaitRefetchQueries = _c === void 0 ? false : _c,\n        fetchPolicy = _a.fetchPolicy;\n\n    var mutateOptions = __assign({}, mutationFunctionOptions);\n\n    var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n    delete mutateOptions.variables;\n    return this.refreshClient().client.mutate(__assign({\n      mutation: mutation,\n      optimisticResponse: optimisticResponse,\n      refetchQueries: mutateOptions.refetchQueries || this.getOptions().refetchQueries,\n      awaitRefetchQueries: awaitRefetchQueries,\n      update: update,\n      context: mutationContext,\n      fetchPolicy: fetchPolicy,\n      variables: mutateVariables\n    }, mutateOptions));\n  };\n\n  MutationData.prototype.onMutationStart = function () {\n    if (!this.result.loading && !this.getOptions().ignoreResults) {\n      this.updateResult({\n        loading: true,\n        error: undefined,\n        data: undefined,\n        called: true\n      });\n    }\n  };\n\n  MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n    var _a = this.getOptions(),\n        onCompleted = _a.onCompleted,\n        ignoreResults = _a.ignoreResults;\n\n    var data = response.data,\n        errors = response.errors;\n    var error = errors && errors.length > 0 ? new ApolloError({\n      graphQLErrors: errors\n    }) : undefined;\n\n    var callOncomplete = function callOncomplete() {\n      return onCompleted ? onCompleted(data) : null;\n    };\n\n    if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n      this.updateResult({\n        called: true,\n        loading: false,\n        data: data,\n        error: error\n      });\n    }\n\n    callOncomplete();\n  };\n\n  MutationData.prototype.onMutationError = function (error, mutationId) {\n    var onError = this.getOptions().onError;\n\n    if (this.isMostRecentMutation(mutationId)) {\n      this.updateResult({\n        loading: false,\n        error: error,\n        data: undefined,\n        called: true\n      });\n    }\n\n    if (onError) {\n      onError(error);\n    }\n  };\n\n  MutationData.prototype.generateNewMutationId = function () {\n    return ++this.mostRecentMutationId;\n  };\n\n  MutationData.prototype.isMostRecentMutation = function (mutationId) {\n    return this.mostRecentMutationId === mutationId;\n  };\n\n  MutationData.prototype.updateResult = function (result) {\n    if (this.isMounted && (!this.previousResult || !equal(this.previousResult, result))) {\n      this.setResult(result);\n      this.previousResult = result;\n    }\n  };\n\n  return MutationData;\n}(OperationData);\n\nfunction useMutation(mutation, options) {\n  var context = useContext(getApolloContext());\n\n  var _a = useState({\n    called: false,\n    loading: false\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var updatedOptions = options ? __assign({}, options, {\n    mutation: mutation\n  }) : {\n    mutation: mutation\n  };\n  var mutationDataRef = useRef();\n\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData({\n        options: updatedOptions,\n        context: context,\n        result: result,\n        setResult: setResult\n      });\n    }\n\n    return mutationDataRef.current;\n  }\n\n  var mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n  useEffect(function () {\n    return mutationData.afterExecute();\n  });\n  return mutationData.execute(result);\n}\n\nvar SubscriptionData = function (_super) {\n  __extends(SubscriptionData, _super);\n\n  function SubscriptionData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.currentObservable = {};\n    _this.setResult = setResult;\n\n    _this.initialize(options);\n\n    return _this;\n  }\n\n  SubscriptionData.prototype.execute = function (result) {\n    if (this.getOptions().skip === true) {\n      this.cleanup();\n      return {\n        loading: false,\n        error: undefined,\n        data: undefined,\n        variables: this.getOptions().variables\n      };\n    }\n\n    var currentResult = result;\n\n    if (this.refreshClient().isNew) {\n      currentResult = this.getLoadingResult();\n    }\n\n    var shouldResubscribe = this.getOptions().shouldResubscribe;\n\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(this.getOptions());\n    }\n\n    if (shouldResubscribe !== false && this.previousOptions && Object.keys(this.previousOptions).length > 0 && (this.previousOptions.subscription !== this.getOptions().subscription || !equal(this.previousOptions.variables, this.getOptions().variables) || this.previousOptions.skip !== this.getOptions().skip)) {\n      this.cleanup();\n      currentResult = this.getLoadingResult();\n    }\n\n    this.initialize(this.getOptions());\n    this.startSubscription();\n    this.previousOptions = this.getOptions();\n    return __assign({}, currentResult, {\n      variables: this.getOptions().variables\n    });\n  };\n\n  SubscriptionData.prototype.afterExecute = function () {\n    this.isMounted = true;\n  };\n\n  SubscriptionData.prototype.cleanup = function () {\n    this.endSubscription();\n    delete this.currentObservable.query;\n  };\n\n  SubscriptionData.prototype.initialize = function (options) {\n    if (this.currentObservable.query || this.getOptions().skip === true) return;\n    this.currentObservable.query = this.refreshClient().client.subscribe({\n      query: options.subscription,\n      variables: options.variables,\n      fetchPolicy: options.fetchPolicy\n    });\n  };\n\n  SubscriptionData.prototype.startSubscription = function () {\n    if (this.currentObservable.subscription) return;\n    this.currentObservable.subscription = this.currentObservable.query.subscribe({\n      next: this.updateCurrentData.bind(this),\n      error: this.updateError.bind(this),\n      complete: this.completeSubscription.bind(this)\n    });\n  };\n\n  SubscriptionData.prototype.getLoadingResult = function () {\n    return {\n      loading: true,\n      error: undefined,\n      data: undefined\n    };\n  };\n\n  SubscriptionData.prototype.updateResult = function (result) {\n    if (this.isMounted) {\n      this.setResult(result);\n    }\n  };\n\n  SubscriptionData.prototype.updateCurrentData = function (result) {\n    var onSubscriptionData = this.getOptions().onSubscriptionData;\n    this.updateResult({\n      data: result.data,\n      loading: false,\n      error: undefined\n    });\n\n    if (onSubscriptionData) {\n      onSubscriptionData({\n        client: this.refreshClient().client,\n        subscriptionData: result\n      });\n    }\n  };\n\n  SubscriptionData.prototype.updateError = function (error) {\n    this.updateResult({\n      error: error,\n      loading: false\n    });\n  };\n\n  SubscriptionData.prototype.completeSubscription = function () {\n    var onSubscriptionComplete = this.getOptions().onSubscriptionComplete;\n    if (onSubscriptionComplete) onSubscriptionComplete();\n    this.endSubscription();\n  };\n\n  SubscriptionData.prototype.endSubscription = function () {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  };\n\n  return SubscriptionData;\n}(OperationData);\n\nfunction useSubscription(subscription, options) {\n  var context = useContext(getApolloContext());\n  var updatedOptions = options ? __assign({}, options, {\n    subscription: subscription\n  }) : {\n    subscription: subscription\n  };\n\n  var _a = useState({\n    loading: !updatedOptions.skip,\n    error: undefined,\n    data: undefined\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var subscriptionDataRef = useRef();\n\n  function getSubscriptionDataRef() {\n    if (!subscriptionDataRef.current) {\n      subscriptionDataRef.current = new SubscriptionData({\n        options: updatedOptions,\n        context: context,\n        setResult: setResult\n      });\n    }\n\n    return subscriptionDataRef.current;\n  }\n\n  var subscriptionData = getSubscriptionDataRef();\n  subscriptionData.setOptions(updatedOptions, true);\n  subscriptionData.context = context;\n  useEffect(function () {\n    return subscriptionData.afterExecute();\n  });\n  useEffect(function () {\n    return subscriptionData.cleanup.bind(subscriptionData);\n  }, []);\n  return subscriptionData.execute(result);\n}\n\nfunction useApolloClient() {\n  var client = React.useContext(getApolloContext()).client;\n  process.env.NODE_ENV === \"production\" ? invariant(client, 1) : invariant(client, 'No Apollo Client instance can be found. Please ensure that you ' + 'have called `ApolloProvider` higher up in your tree.');\n  return client;\n}\n\nfunction makeDefaultQueryInfo() {\n  return {\n    seen: false,\n    observable: null\n  };\n}\n\nvar RenderPromises = function () {\n  function RenderPromises() {\n    this.queryPromises = new Map();\n    this.queryInfoTrie = new Map();\n  }\n\n  RenderPromises.prototype.registerSSRObservable = function (observable, props) {\n    this.lookupQueryInfo(props).observable = observable;\n  };\n\n  RenderPromises.prototype.getSSRObservable = function (props) {\n    return this.lookupQueryInfo(props).observable;\n  };\n\n  RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n    var info = this.lookupQueryInfo(queryInstance.getOptions());\n\n    if (!info.seen) {\n      this.queryPromises.set(queryInstance.getOptions(), new Promise(function (resolve) {\n        resolve(queryInstance.fetchData());\n      }));\n      return null;\n    }\n\n    return finish();\n  };\n\n  RenderPromises.prototype.hasPromises = function () {\n    return this.queryPromises.size > 0;\n  };\n\n  RenderPromises.prototype.consumeAndAwaitPromises = function () {\n    var _this = this;\n\n    var promises = [];\n    this.queryPromises.forEach(function (promise, queryInstance) {\n      _this.lookupQueryInfo(queryInstance).seen = true;\n      promises.push(promise);\n    });\n    this.queryPromises.clear();\n    return Promise.all(promises);\n  };\n\n  RenderPromises.prototype.lookupQueryInfo = function (props) {\n    var queryInfoTrie = this.queryInfoTrie;\n    var query = props.query,\n        variables = props.variables;\n    var varMap = queryInfoTrie.get(query) || new Map();\n    if (!queryInfoTrie.has(query)) queryInfoTrie.set(query, varMap);\n    var variablesString = JSON.stringify(variables);\n    var info = varMap.get(variablesString) || makeDefaultQueryInfo();\n    if (!varMap.has(variablesString)) varMap.set(variablesString, info);\n    return info;\n  };\n\n  return RenderPromises;\n}();\n\nexport { RenderPromises, useApolloClient, useLazyQuery, useMutation, useQuery, useSubscription };"],"sourceRoot":""}