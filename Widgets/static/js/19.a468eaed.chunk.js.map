{"version":3,"sources":["widgets/popular-accounts/styles.ts","widgets/popular-accounts/component.tsx"],"names":["OrderKey","styled","div","props","theme","popularAccounts","orderBg","orderColor","StyledIcon","a","AccountItem","acc","order","Box","pad","direction","align","Image","src","profile_image_url_https","width","height","style","borderRadius","minWidth","marginLeft","marginRight","flex","Text","size","weight","color","wordWrap","name","screen_name","order_change","LinkUp","LinkDown","PopularAccountsComponent","useContext","ThemeContext","useState","currentInterval","setCurrentInterval","changeInterval","useCallback","interval","useTwitterInfluenceQuery","variables","limit","resolution","data","loading","background","target","href","textAlign","fill","Heading","primary","maxWidth","inputIntervals","justify","getTopTwitterInfluencers","users","slice","map","key"],"mappings":"k0BAEO,IAAMA,EAAWC,UAAOC,IAAV,KAEL,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,gBAAgBC,WAM1C,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,gBAAgBE,cAMnCC,EAAaP,UAAOQ,EAAV,K,SCPjBC,EAAc,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,IAAKC,EAAkD,EAAlDA,MAC1B,OACE,kBAACC,EAAA,EAAD,CAAKC,IAAI,QAAQC,UAAU,MAAMC,MAAM,UACrC,kBAAChB,EAAD,KAAWY,GACX,kBAACK,EAAA,EAAD,CACEC,IAAKP,EAAIQ,wBACTC,MAAM,OACNC,OAAO,OACPC,MAAO,CAAEC,aAAc,MAAOC,SAAU,UAE1C,kBAACX,EAAA,EAAD,CACEE,UAAU,SACVO,MAAO,CAAEG,WAAY,KAAMC,YAAa,MACxCC,KAAK,UAEL,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLC,OAAO,OACPC,MAAM,UACNT,MAAO,CAAEU,SAAU,eAElBrB,EAAIsB,MAEP,kBAACL,EAAA,EAAD,CAAMC,KAAK,OAAOC,OAAO,OAAOC,MAAM,WAAtC,IACIpB,EAAIuB,cAGV,kBAACrB,EAAA,EAAD,KACwB,IAArBF,EAAIwB,eACFxB,EAAIwB,aAAe,EAClB,kBAACC,EAAA,EAAD,CAAQL,MAAM,QAAQF,KAAK,SAE3B,kBAACQ,EAAA,EAAD,CAAUN,MAAM,MAAMF,KAAK,aA+ExBS,UAxEkB,WAC/B,IAAMlC,EAAamC,qBAAWC,KADO,EAESC,mBAAS,MAFlB,mBAE9BC,EAF8B,KAEbC,EAFa,KAG/BC,EAAiBC,uBAAY,SAACC,GAClCH,EAAmBG,KAClB,IALkC,EASXC,YAAyB,CACjDC,UAAW,CACTC,MAAO,GACPC,WAAYR,GAAmB,SAH3BS,EAT6B,EAS7BA,KAAMC,EATuB,EASvBA,QAOd,OACE,kBAACvC,EAAA,EAAD,CAAKwC,WAAYjD,EAAMC,gBAAgBgD,WAAYvC,IAAI,QACrD,kBAACN,EAAD,CAAY8C,OAAO,IAAIC,KAAM,0BAC3B,kBAAC,IAAD,CAAenC,MAAO,IAAKC,OAAQ,MAErC,kBAACO,EAAA,EAAD,CAAM4B,UAAU,SAAS3B,KAAK,OAAOE,MAAM,WAA3C,qBAIA,kBAAClB,EAAA,EAAD,CAAKE,UAAU,MAAM0C,MAAI,GACvB,kBAACC,EAAA,EAAD,CACE7B,KAAK,OACLE,MAAO3B,EAAMuD,QACbH,UAAU,SACVlC,MAAO,CAAEF,MAAO,OAAQwC,SAAU,SAJpC,kCAUF,kBAAC/C,EAAA,EAAD,CAAKC,IAAI,QAAQ2C,MAAI,GACnB,kBAAC,IAAD,CACEf,gBAAiBA,EACjBmB,eAhCqB,CAAC,QAAS,SAAU,UAAW,WAiCpDjB,eAAgBA,KAIpB,kBAAC/B,EAAA,EAAD,CAAKE,UAAU,kBACb,kBAACF,EAAA,EAAD,CAAKE,UAAU,SAAS0C,MAAI,GACzBL,EACC,kBAACvC,EAAA,EAAD,CAAK4C,MAAI,EAAC9B,MAAI,EAACmC,QAAQ,SAAS9C,MAAM,UACpC,kBAACY,EAAA,EAAD,oBAGFuB,GACAA,EAAKY,yBAAyBC,MAC3BC,MAAM,EAAG,GACTC,KAAI,SAACvD,EAAmBwD,GAApB,OACH,kBAAC,EAAD,CAAaxD,IAAKA,EAAKC,MAAOuD,EAAM,EAAGA,IAAKxD,EAAIuB,kBAIxD,kBAACrB,EAAA,EAAD,CAAKE,UAAU,SAAS0C,MAAI,GACzBN,GACCA,EAAKY,yBAAyBC,MAC3BC,MAAM,EAAG,IACTC,KAAI,SAACvD,EAAmBwD,GAApB,OACH,kBAAC,EAAD,CAAaxD,IAAKA,EAAKC,MAAOuD,EAAM,EAAGA,IAAKxD,EAAIuB","file":"static/js/19.a468eaed.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const OrderKey = styled.div`\n  border-radius: 50px;\n  background: ${props => props.theme.popularAccounts.orderBg};\n  width: 19px;\n  height: 19px;\n  min-height: 19px;\n  text-align: center;\n  line-height: 19px;\n  color: ${props => props.theme.popularAccounts.orderColor};\n  margin-right: 8%;\n  min-width: 19px;\n  font-size: 12px;\n`;\n\nexport const StyledIcon = styled.a`\n  position: fixed;\n  top: 1em;\n  right: 0;\n  transform: translate3d(119px, 0, 0);\n  transition: ease 0.7s;\n  :hover {\n    right: 0;\n    transform: translate3d(7px, 0, 0);\n    transition: ease 0.7s;\n  }\n`;\n","import React, { useCallback, useState, useContext } from \"react\";\nimport { Box, Heading, Text, Image, ThemeContext } from \"grommet\";\nimport { LinkUp, LinkDown } from \"grommet-icons\";\n\nimport { Interval } from \"../../components/interval\";\nimport { CryptomoodSvg } from \"../../components/cryptomood-svg\";\nimport { OrderKey, StyledIcon } from \"./styles\";\nimport { useTwitterInfluenceQuery } from \"../../generated/apollo\";\n\nconst AccountItem = ({ acc, order }: { acc: AccountValue; order: number }) => {\n  return (\n    <Box pad=\"small\" direction=\"row\" align=\"center\">\n      <OrderKey>{order}</OrderKey>\n      <Image\n        src={acc.profile_image_url_https}\n        width=\"48px\"\n        height=\"48px\"\n        style={{ borderRadius: \"50%\", minWidth: \"48px\" }}\n      />\n      <Box\n        direction=\"column\"\n        style={{ marginLeft: \"8%\", marginRight: \"5%\" }}\n        flex=\"shrink\"\n      >\n        <Text\n          size=\"22px\"\n          weight=\"bold\"\n          color=\"#2F7CF5\"\n          style={{ wordWrap: \"break-word\" }}\n        >\n          {acc.name}\n        </Text>\n        <Text size=\"12px\" weight=\"bold\" color=\"#B4B4B4\">\n          @{acc.screen_name}\n        </Text>\n      </Box>\n      <Box>\n        {acc.order_change !== 0 &&\n          (acc.order_change > 0 ? (\n            <LinkUp color=\"green\" size=\"19px\" />\n          ) : (\n            <LinkDown color=\"red\" size=\"19px\" />\n          ))}\n      </Box>\n    </Box>\n  );\n};\n\nconst PopularAccountsComponent = () => {\n  const theme: any = useContext(ThemeContext);\n  const [currentInterval, setCurrentInterval] = useState(\"D1\");\n  const changeInterval = useCallback((interval: string) => {\n    setCurrentInterval(interval);\n  }, []);\n  //const inputIntervalButtons = [\"5 min\", \"15 min\", \"1 h\", \"4 h\", \"1 d\"];\n  const inputIntervalButtons = [\"1 Day\", \"1 Week\", \"2 Weeks\", \"1 Month\"];\n\n  const { data, loading } = useTwitterInfluenceQuery({\n    variables: {\n      limit: 10,\n      resolution: currentInterval || \"all\"\n    }\n  });\n\n  return (\n    <Box background={theme.popularAccounts.background} pad=\"20px\">\n      <StyledIcon target=\"_\" href={\"https://cryptomood.com\"}>\n        <CryptomoodSvg width={155} height={40} />\n      </StyledIcon>\n      <Text textAlign=\"center\" size=\"18px\" color=\"#B4B4B4\">\n        Based on retweets\n      </Text>\n\n      <Box direction=\"row\" fill>\n        <Heading\n          size=\"32px\"\n          color={theme.primary}\n          textAlign=\"center\"\n          style={{ width: \"100%\", maxWidth: \"none\" }}\n        >\n          Most popular Twitter accounts\n        </Heading>\n      </Box>\n\n      <Box pad=\"small\" fill>\n        <Interval\n          currentInterval={currentInterval}\n          inputIntervals={inputIntervalButtons}\n          changeInterval={changeInterval}\n        />\n      </Box>\n      {/*<Grid columns={[\"50%\", \"50%\"]} gap=\"none\">*/}\n      <Box direction=\"row-responsive\">\n        <Box direction=\"column\" fill>\n          {loading ? (\n            <Box fill flex justify=\"center\" align=\"center\">\n              <Text>loading...</Text>\n            </Box>\n          ) : (\n            data &&\n            data.getTopTwitterInfluencers.users\n              .slice(0, 5)\n              .map((acc: AccountValue, key: number) => (\n                <AccountItem acc={acc} order={key + 1} key={acc.screen_name} />\n              ))\n          )}\n        </Box>\n        <Box direction=\"column\" fill>\n          {data &&\n            data.getTopTwitterInfluencers.users\n              .slice(5, 10)\n              .map((acc: AccountValue, key: number) => (\n                <AccountItem acc={acc} order={key + 6} key={acc.screen_name} />\n              ))}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default PopularAccountsComponent;\n\ninterface AccountValue {\n  name: string;\n  order_change: number;\n  profile_image_url_https: string;\n  screen_name: string;\n  __typename: string;\n}\n"],"sourceRoot":""}